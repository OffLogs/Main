@using OffLogs.Web.Core.Helpers
@using OffLogs.Web.Constants
@using OffLogs.Web.Constants.Bootstrap
@inject IJSRuntime _js;

<button 
  id="@IdString"
  class="btn @_classString" 
  @onclick="@OnClick" 
  type="@(IsSubmit ? @"submit" : "button")"
  disabled="@IsDisabled"
  @onclick:stopPropagation
  >
  @ChildContent
</button>

@code {
    [Parameter]
    public bool IsHidden { get; set; } = false;

    [Parameter]
    public bool IsSubmit { get; set; } = false;

    [Parameter]
    public bool IsDisabled { get; set; } = false;

    [Parameter]
    public ColorType Type { get; set; } = ColorType.Primary;

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public bool IsOutlined { get; set; } = false;

    [Parameter]
    public bool IsSmall { get; set; } = false;

    private int _id = Randomizer.GetNumber();
    private string IdString => $"js-my-button-{_id}";

    private string _classString
    {
        get {
            var result = "";
            if (IsHidden)
            {
                return " w-hidden-btn";
            }
            if (IsOutlined)
            {
                result += "btn-outline";
            }
            result += $"btn-{Type.GetName()}";
            if (IsSmall)
            {
                result += $" btn-sm";
            }
            result += $" {Class}";
            return result;
        }
    }

    public void Click()
    {
        _js.InvokeVoidAsync("clickOnElement", IdString);
    }
}
