@using OffLogs.Web.Core.Components.Form
@using Microsoft.AspNetCore.Components
@using OffLogs.Business.Common.Extensions
@using OffLogs.Web.Resources

@inherits BaseComponent

<h2>
    @if (_isNew)
    {
        @NotificationResources.AddNewTemplate
    }
    else
    {
        @_model.Subject.Truncate(200)
    }
</h2>
    
<MyEditForm OnValidSubmit="@HandleSubmit"
            EditContext="@_editContext"
            @ref="@_editForm">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <p>
        <CustomInputText
            IsDisabled="@_isLoading"
            Label="@NotificationResources.MessageTemplate_Subject"
            @bind-Value="@_model.Subject"/>
    </p>
    <p>
        <CustomInputText
            IsMulti="true"
            IsDisabled="@_isLoading"
            Label="@NotificationResources.MessageTemplate_Body"
            Placeholder="@NotificationResources.MessageTemplate_BodyPlaceholder"
            @bind-Value="@_model.Body"/>
    </p>
    <p>
        <Markdown MarkdownText="@_model.Body"></Markdown>
    </p>
    <hr/>
    @if (_isLoading)
    {
        <Preloader />
    }
    else
    {
        <MyButton IsSubmit="true">
            @if (_isNew)
            {
                @CommonResources.Add
            }
            else
            {
                @CommonResources.Save
            }
        </MyButton>
    }
</MyEditForm>

<ConfirmationModal
    Title="@NotificationResources.Confirmation_AreSureToDeleteTemplate" 
    IsShow="@_isShowDeleteModal"
    OnOk="@(async () => await OnDeleteAppAsync())"
    OnCancel="@(() => _isShowDeleteModal = false)"/>
