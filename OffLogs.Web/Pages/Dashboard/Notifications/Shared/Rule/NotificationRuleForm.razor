@using OffLogs.Web.Core.Components.Form
@using Microsoft.AspNetCore.Components
@using OffLogs.Api.Common.Dto.RequestsAndResponses.Board.Notifications.Rule
@using OffLogs.Business.Common.Constants.Notificatiions
@using OffLogs.Web.Constants.Bootstrap
@using OffLogs.Web.Resources

@inherits BaseComponent

<h2>
    @if (_isNew)
    {
        @NotificationResources.AddNewRule
    }
    else
    {
        <text>@Model.Title</text>
    }
</h2>
    
<MyEditForm OnSubmit="@HandleSubmit"
            EditContext="@_editContext"
            @ref="@_editForm">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="row mb-3">
        <div class="col">
            <CustomInputText
                Label="@NotificationResources.Rules_RuleTitle"
                IsDisabled="@_isLoading"
                @bind-Value="@Model.Title"
            />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <CustomDropDown
                Label="@NotificationResources.Rules_MessageTemplate"
                Items="@_messageTemplateDownListItems"
                SelectedItemId="@($"{Model.TemplateId}")"
                OnChanged="@(value => Model.TemplateId = value.IdAsLong)"/>
        </div>
        <div class="col">
            <CustomDropDown
                Label="@NotificationResources.Rules_Application"
                Items="@_applicationDownListItems"
                SelectedItemId="@($"{Model.ApplicationId}")"
                OnChanged="@(value => Model.ApplicationId = value?.IdAsLong)"
            />
        </div>
        <div class="col">
            <CustomInputText
                Label="@NotificationResources.Rules_Period"
                IsDisabled="@_isLoading"
                @bind-Value="@Model.Period"
            />
        </div>
    </div>
    <hr/>
    <div class="row mb-3">
        <div class="col">
            <CustomDropDown
                Label="@NotificationResources.Rules_HowToCombineConditions"
                Items="@_operatorTypesDownListItems"
                SelectedItemId="@($"{Model.LogicOperator}")"
                OnChanged="@(value => Model.LogicOperator = value.Id)"
            />
        </div>
        <div class="col align-self-end">
            <MyButton 
                OnClick="OnAddCondition"
                Type="ColorType.Success"
            >
                <Icon Name="ui-add"/>
                @NotificationResources.Rules_AddCondition 
            </MyButton>        
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            @foreach(var condition in Model.Conditions)
            {
                <CascadingValue Value="this">
                    <ConditionForm 
                        OnDeleted="OnDeleteCondition"
                        Condition="@condition"
                    />
                </CascadingValue>
            }
        </div>
    </div>
    <hr/>
    @if (_isLoading)
    {
        <Preloader />
    }
    else
    {
        <MyButton IsSubmit="true">
            @if (_isNew)
            {
                @CommonResources.Add
            }
            else
            {
                @CommonResources.Save
            }
        </MyButton>
    }
</MyEditForm>

<ConfirmationModal
    Title="@NotificationResources.Confirmation_AreSureToDeleteRule" 
    IsShow="@_isShowDeleteModal"
    OnOk="@(async () => await OnDeleteRuleAsync())"
    OnCancel="@(() => _isShowDeleteModal = false)"></ConfirmationModal>
