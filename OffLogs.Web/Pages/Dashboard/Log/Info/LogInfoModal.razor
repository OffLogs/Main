@using OffLogs.Web.Services.Http
@using OffLogs.Business.Common.Models.Api.Request
@using OffLogs.Web.Core.Models.Modal
@using Microsoft.AspNetCore.Components.Web
@using OffLogs.Business.Common.Models.Api.Request.User
@using OffLogs.Web.Core.Components.Form
@using OffLogs.Web.Core.Constants
@using OffLogs.Web.Shared.Modal
@using OffLogs.Web.Shared.Ui
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using OffLogs.Business.Common.Models.Api.Request.Board
@using OffLogs.Web.Services
@inject IApiService _apiService
@inject ToastService _toastService

<ModalWindow
    IsShow="IsShowAddModal"
    OnClose="@(async () => { await Task.Yield(); IsShowAddModal = false; })"
    >
    Some log info
</ModalWindow>

@code
{
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    
    [Parameter]
    public bool IsShowAddModal { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var applications = await _apiService.GetApplications(new PaginatedRequestModel()
        {
            Page = 1
        });
    }
}
