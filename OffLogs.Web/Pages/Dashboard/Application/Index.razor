@page "/dashboard/applications"
@using OffLogs.Web.Services.Http
@using OffLogs.Web.Pages.Dashboard.Application.Add
@using OffLogs.Web.Pages.Dashboard.Application.Info
@using OffLogs.Api.Common.Dto.Entities
@using OffLogs.Api.Common.Dto.RequestsAndResponses.Board.Application
@inject IApiService _apiService

<h1>Your application</h1>

<AddApplicationModal>
    bbbb
</AddApplicationModal>

@if (_selectedApplicationId != null)
{
    <AppInfoModal ApplicationId="@_selectedApplicationId" />
}

<table class="table table-hover w-table">
    <thead>
        <tr>
            <th>Name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var application in _applications)
        {
            <tr @onclick="@(async () => await OnClickRowAsync(application))">
                <td>@application.Name</td>
            </tr>

        }
    </tbody>
</table>

@code
{
    private List<ApplicationListItemDto> _applications = new();
    private int _currentPage = 1;
    private long? _selectedApplicationId;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await LoadListAsync(false);
    }

    private async Task LoadListAsync(bool isLoadNextPage = true)
    {
        if (isLoadNextPage)
        {
            _currentPage++;
        }
        var response = await _apiService.GetApplications(new GetListRequest()
        {
            Page = _currentPage
        });
        _applications = response.Items.ToList();
        StateHasChanged();
    }

    private async Task OnClickRowAsync(ApplicationListItemDto application)
    {
        _selectedApplicationId = application.Id;
        await Task.CompletedTask;
    }

    private void OnCloseInfoModal()
    {
        _selectedApplicationId = null;
    }
}
