@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using OffLogs.Business.Common.Models.Api.Request.User
@using OffLogs.Web.Core.Constants
@using OffLogs.Web.Core.Components.Form
@using OffLogs.Web.Services
@using OffLogs.Web.Shared.Ui
@inject IAuthorizationService _authorizationService
@inject NavigationManager _navigationManager
@inject ToastService _toastService

<h1>Please login</h1>

<EditForm Model="@model" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        @UserNameError
        <CustomInputText
            Label="Login:"
            @bind-Value="model.UserName"
            ErrorMessage="@UserNameError"/>
    </p>
    <p>
        @PasswordError
        <CustomInputText
            Label="Password:"
            @bind-Value="model.Password"
            type="password"
            ErrorMessage="@PasswordError"/>
    </p>
    <MyButton IsSubmit="true">Login</MyButton>
</EditForm>

@code
{
    private LoginRequestModel model = new();
    private EditContext _editContext;

    private string? UserNameError
    {
        get
        {
            var messages = _editContext.GetValidationMessages(() => model.UserName);
            return messages.FirstOrDefault();
        }
    }
    
    private string? PasswordError
    {
        get
        {
            var messages = _editContext.GetValidationMessages(() => model.Password);
            return messages.FirstOrDefault();
        }
    }

    protected override void OnInitialized()
    {
        _editContext = new EditContext(model);
    }

    private async Task HandleSubmit()
    {
        var isValid = _editContext.Validate();
        
        if (isValid)
        {
            try
            {
                var isLoggedIn = await _authorizationService.LoginAsync(model);
                if (isLoggedIn)
                {
                    _navigationManager.NavigateTo(SiteUrl.Dashboard);
                    return;
                }
            }
            catch (Exception e)
            {
                _toastService.AddErrorMessage("Login or password is incorrect");
            }
        }
        StateHasChanged();
    }
}
