//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OffLogs.Web.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LandingPageResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LandingPageResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OffLogs.Web.Resources.LandingPageResources", typeof(LandingPageResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation.
        /// </summary>
        internal static string Documentation_Title {
            get {
                return ResourceManager.GetString("Documentation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server error. Please contact to the support :(.
        /// </summary>
        internal static string Error_500 {
            get {
                return ResourceManager.GetString("Error_500", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        internal static string Main_About {
            get {
                return ResourceManager.GetString("Main_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OffLogs is free Open Source service that allows you to aggregate debugging information (logs) in one place
        ///from your services or sites, it is convenient to view it, as well as receive operational statistics on this information.
        ///One of the important principles that we adhere to is safety.
        ///Therefore, most of the information stored on our servers in encrypted form, and only you have the opportunity to receive and view
        ///it in decrypted form.        
        ///        .
        /// </summary>
        internal static string Main_Desc {
            get {
                return ResourceManager.GetString("Main_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        /// - There is no need to manually monitor debug information from your resources,
        ///especially if they are located on different servers
        /// - Flexible notification system when receiving certain debugging information
        /// - Viewing detailed statistics
        /// - Convenient viewing and filtering of logs and debugging information
        ///        .
        /// </summary>
        internal static string Main_Features_Desc {
            get {
                return ResourceManager.GetString("Main_Features_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        internal static string Main_Features_Title {
            get {
                return ResourceManager.GetString("Main_Features_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///For example. One of the cases where OffLogs can help you:
        ///
        ///1. Suppose you have one or more websites. These sites are located on different servers
        ///2. You use one of our clients or create your own logger to send logs to our API.
        ///   (You can read about using our API [here](/documentation/api/2_1_rest_api))
        ///3. Your sites or services, in the course of work, will generate debugging information that will be received and encrypted by our service.
        ///4. It&apos;s all :) Now you can view all debug information from your reso [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Main_HowItWorks_Desc {
            get {
                return ResourceManager.GetString("Main_HowItWorks_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How it works?.
        /// </summary>
        internal static string Main_HowItWorks_Title {
            get {
                return ResourceManager.GetString("Main_HowItWorks_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About the OffLogs project.
        /// </summary>
        internal static string Main_Title {
            get {
                return ResourceManager.GetString("Main_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dashboard.
        /// </summary>
        internal static string Menu_Dashboard {
            get {
                return ResourceManager.GetString("Menu_Dashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login.
        /// </summary>
        internal static string Menu_Login {
            get {
                return ResourceManager.GetString("Menu_Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign Up.
        /// </summary>
        internal static string Menu_SignUp {
            get {
                return ResourceManager.GetString("Menu_SignUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///If you found any bug please check or add your bug to our [bug tracker](https://gitlab.com/offlogs-public/main/-/issues)
        ///for already reported and discussed bugs and feature requests.
        ///        .
        /// </summary>
        internal static string Support_Desc_BugTracking {
            get {
                return ResourceManager.GetString("Support_Desc_BugTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///To get additional information on how to integrate and working with OffLogs, our [Wiki](/documentation/common/1_1_common) will help.
        ///        .
        /// </summary>
        internal static string Support_Desc_Documentation {
            get {
                return ResourceManager.GetString("Support_Desc_Documentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///If you have any questions please send us an email at **support@offlogs.com** or you can write your question in the [Discord](https://discord.gg/gQQEeK5RVB) Chat 
        ///        .
        /// </summary>
        internal static string Support_Desc_Email {
            get {
                return ResourceManager.GetString("Support_Desc_Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///            For issues concerning the software itself, there are several ways to get help on questions about OffLogs.
        ///            
        ///            Please choose from the following:
        ///        .
        /// </summary>
        internal static string Support_Header {
            get {
                return ResourceManager.GetString("Support_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Need help?.
        /// </summary>
        internal static string Support_Title {
            get {
                return ResourceManager.GetString("Support_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found a bug?.
        /// </summary>
        internal static string Support_Title_BugTracking {
            get {
                return ResourceManager.GetString("Support_Title_BugTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documentation Wiki.
        /// </summary>
        internal static string Support_Title_Documentation {
            get {
                return ResourceManager.GetString("Support_Title_Documentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contact info.
        /// </summary>
        internal static string Support_Title_Email {
            get {
                return ResourceManager.GetString("Support_Title_Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your email address has been successfully verified!.
        /// </summary>
        internal static string User_EmailSuccessfullyVerified {
            get {
                return ResourceManager.GetString("User_EmailSuccessfullyVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email verification.
        /// </summary>
        internal static string User_EmailVerification {
            get {
                return ResourceManager.GetString("User_EmailVerification", resourceCulture);
            }
        }
    }
}
